import { AnimatePresence, motion } from "framer-motion";
import { ArrowLeft } from "lucide-react";
import { useState } from "react";
import { useNavigate } from "react-router-dom";

export default function Rules() {
    const navigate = useNavigate();
    const [openFine, setOpenFine] = useState(false);


    const rules = [
        "üö≠ –ù–µ –∫—É—Ä–∏–º —Å–∏–≥–∞—Ä–µ—Ç—ã –≤–Ω—É—Ç—Ä–∏ ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è, —É –Ω–∞—Å –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è —ç—Ç–æ–≥–æ.",
        "ü§ù –£–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö –≥–æ—Å—Ç–µ–π –∏ –∫–∞–ª—å—è–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ ‚Äî –æ–Ω–∏ —Ç–æ–∂–µ –ø—Ä–∏—à–ª–∏ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è, –∞ –Ω–µ —Å–ø–æ—Ä–∏—Ç—å –æ —Ç–æ–º, –∫—Ç–æ –ª—É—á—à–µ –∫—É—Ä–∏—Ç.",
        "üë• –ö–æ–º–ø–∞–Ω–∏—è –æ—Ç 4 —á–µ–ª–æ–≤–µ–∫? –¢–æ–≥–¥–∞ 2 –∫–∞–ª—å—è–Ω–∞ ‚Äî —ç—Ç–æ –º–∏–Ω–∏–º—É–º! –ß–µ–º –±–æ–ª—å—à–µ, —Ç–µ–º –≤–∫—É—Å–Ω–µ–µ.",
        "üí∏ –ü—Ä–æ–±–∫–æ–≤—ã–π —Å–±–æ—Ä ‚Äî –≤—Å–µ–≥–æ 200 —Ä—É–±–ª–µ–π –∑–∞ –µ–¥–∏–Ω–∏—Ü—É. –ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, —ç—Ç–æ –Ω–µ –Ω–∞–ª–æ–≥, –∞ –≤–∫–ª–∞–¥ –≤ —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.",
        "üé∂ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π –∏ —Ä–∞—Å—Å–ª–∞–±–ª—è–π—Ç–µ—Å—å! –ù–æ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏ –≥–∞–¥–∂–µ—Ç—ã –≤ —Ä–µ–∂–∏–º–µ '–Ω–µ –º–µ—à–∞—Ç—å' ‚Äî –º—ã —Ç—É—Ç –Ω–µ –¥–ª—è —Å–µ–ª—Ñ–∏.",
        "üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã ‚Äî –∫–∞–∫ —Ö–æ—Ä–æ—à–∞—è —à—É—Ç–∫–∞: –º–∞–∫—Å–∏–º—É–º –¥–æ 1:00 –Ω–æ—á–∏. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º—ã –∑–∞–∫—Ä—ã–≤–∞–µ–º –ª–∞–≤–æ—á–∫—É. –ù–µ –æ–ø–∞–∑–¥—ã–≤–∞–π—Ç–µ ‚Äî –∏–Ω–∞—á–µ –ø—Ä–∏–¥–µ—Ç—Å—è –∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è!",
        "üòÑ –ò —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ: —É–ª—ã–±–∞–π—Ç–µ—Å—å! –•–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –∫–∞–∫ —Ö–æ—Ä–æ—à–∏–π –∫–∞–ª—å—è–Ω: —á–µ–º –±–æ–ª—å—à–µ, —Ç–µ–º –ª—É—á—à–µ.",
    ];

    const renderItem = (item: string) => (
        <div className="p-4 bg-black border border-[#2c2c2c] rounded-lg shadow-md">
            <p className="text-lg">{item}</p>
        </div>
    );

    return (
        <div className="p-8 text-white rounded-lg shadow-lg max-w-2xl mx-auto">
            <h1 className="text-4xl font-bold mb-6 text-center">–ù–∞—à–∏ –ü—Ä–∞–≤–∏–ª–∞ (–∏–ª–∏ –∫–∞–∫ –Ω–µ –∏—Å–ø–æ—Ä—Ç–∏—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É)</h1>
            <div className="flex flex-col gap-4"
            >
                {rules.map((rule, index) => (
                    <div key={index}>
                        {renderItem(rule)}
                    </div>
                ))}
            </div>
            <div className="flex justify-between">
                <button
                    onClick={() => navigate("/")}
                    className="mt-6 left-4 text-[#058c6f] cursor-pointer flex items-center hover:underline group"
                >
                    <ArrowLeft className="w-5 h-5 relative z-10 transition-transform group-hover:translate-x-1" />
                    <span className="relative z-10 text-[24px] ml-2"
                        style={{ fontFamily: 'Sofia', fontWeight: 'bold' }}>–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ</span>

                    <span className="absolute left-0 bottom-0 w-0 h-0.5 bg-gray-500 transition-all duration-300 group-hover:w-full"></span>
                </button>
                <div onClick={() => setOpenFine(!openFine)}>
                    <button className="mt-6 right-4 text-[#a4a0ab] bg-[#0b0b0b] border border-[#2c2c2c] rounded-lg px-2 py-1 cursor-pointer flex items-center hover:underline">–®—Ç—Ä–∞—Ñ—ã</button>
                </div>
                <AnimatePresence>
                    {openFine && (
                        <div className="fixed inset-0 flex items-center justify-center bg-black/90  p-6">
                            <motion.div
                                className="bg-[#0b0b0b] rounded-lg p-6 shadow-xl max-w-md w-full border-1 border-amber-50"
                                initial={{ opacity: 0, scale: 0.8 }}
                                animate={{ opacity: 1, scale: 1 }}
                                exit={{ opacity: 0, scale: 0.8, x: '-100%' }}
                                transition={{ duration: 0.9 }}
                            >

                                <ul className="text-[#f0eeee] list-disc pl-6 space-y-2 text-[20px]">
                                    <li>–ó–∞ —Ä–∞–∑–±–∏—Ç—É—é –∫–æ–ª–±—É - 1500 ‚ÇΩ.</li>
                                    <li>–ó–∞ —Ä–∞–∑–±–∏—Ç—É—é —á–∞—à—É - 700 ‚ÇΩ.</li>
                                    <li>–ü—Ä–æ–∂–µ–≥ –¥–∏–≤–∞–Ω? - —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç–∞.</li>
                                </ul>
                                <div className="flex float-right">
                                    <button
                                        onClick={() => setOpenFine(false)}
                                        className=" neumorphism-button">
                                        –°–≤–µ—Ä–Ω—É—Ç—å
                                    </button>
                                </div>
                            </motion.div>
                        </div>
                    )}
                </AnimatePresence>
            </div>
        </div>
    );
}




// import { useEffect, useState } from 'react';
// import { Routes, Route } from 'react-router-dom';

// import 'react-toastify/dist/ReactToastify.css';
// import PageLayout from './components/PageLayout';
// import Home from './pages/Home';
// import Lemonades from './pages/Lemonades';
// import Rules from './pages/Rules';
// import ParticleOrbitEffect from './components/lightswind/particleOrbitEffect';
// import ShaderBackground from './components/lightswind/shadedBackground';
// import Tea from './pages/Tea';
// import Cocktails from './pages/Coctails';


// function App() {
//   const [loading, setLoading] = useState(true);

//   useEffect(() => {
//     const timer = setTimeout(() => {
//       setLoading(false);
//     }, 10000);

//     return () => clearTimeout(timer);
//   }, []);

//   return (
//     <div className="min-h-screen bg-black text-white">
//       {loading ? (
//         <ParticleOrbitEffect className="absolute inset-0" />
//       ) : (
//         <div className="relative">
//           <ShaderBackground className="absolute inset-0" color="#07EAC0" backdropBlurAmount="md" />
//           <PageLayout>
//             <Routes>
//               <Route path="/" element={<Home />} />
//               <Route path="/cocktails" element={<Cocktails />} />
//               <Route path="/teas" element={<Tea />} />
//               <Route path="/lemonades" element={<Lemonades />} />
//               <Route path="/rules" element={<Rules />} />
//             </Routes>
//           </PageLayout>
//         </div>
//       )}
//     </div>
//   );
// }

// export default App;

// import { motion } from 'framer-motion';
// import type { Carousel3DItem } from '../components/lightswind/carousel-3d';
// import Carousel3D from '../components/lightswind/carousel-3d';
// import hookah from '../assets/hookah.png';
// import tea from '../assets/tea.png'
// import coctails from '../assets/coctails.png';
// import paradise from '../assets/par.png'

// const categories: Carousel3DItem[] = [
//     {
//         id: 1,
//         title: "",
//         brand: "–ü–∞—Ä–æ–≤—ã–µ –ö–æ–∫—Ç–µ–π–ª–∏",
//         description: "–î—ã–º –∏ –≤–∫—É—Å ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ",
//         tags: ["–î—ã–º–Ω–æ", "–ú–∏–∫—Å—ã –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"],
//         imageUrl: hookah,
//         link: "/cocktails",
//     },
//     {
//         id: 2,
//         title: "",
//         brand: "–ß–∞–π–Ω—ã–π –º–∏–∫—Å",
//         description: "–ù–∞—Å—Ç–æ—è—â–∏–π —á–∞–π –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö —Ü–µ–Ω–∏—Ç–µ–ª–µ–π",
//         tags: ["–ê—Ä–æ–º–∞—Ç–Ω—ã–µ", "–ú–∏–∫—Å –¥–ª—è –≥—É—Ä–º–∞–Ω–æ–≤",],
//         imageUrl: tea,
//         link: "/teas",
//     },
//     {
//         id: 3,
//         title: "",
//         brand: "–õ–∏–º–æ–Ω–∞–¥—ã",
//         description: "–°–≤–µ–∂–µ—Å—Ç—å –≤ –∫–∞–∂–¥–æ–º –≥–ª–æ—Ç–∫–µ",
//         tags: ["–õ–∏–º–æ–Ω–∞–¥", "–§—Ä—É–∫—Ç—ã", "–û—Å–Ω–æ–≤—ã",],
//         imageUrl: coctails,
//         link: "/lemonades",
//     },
//     {
//         id: 4,
//         title: "",
//         brand: "–ù–∞—à–∏ –ü—Ä–∞–≤–∏–ª–∞",
//         description: "–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞",
//         tags: ["–ü—Ä–∞–≤–∏–ª–∞", "–£–≤–∞–∂–µ–Ω–∏–µ", "–ö–æ–º—Ñ–æ—Ä—Ç"],
//         imageUrl: paradise,
//         link: "/rules",
//     }
// ];

// export default function Home() {
//     return (
//         <div className="relative overflow-hidden min-h-screen">
//             <div className="container mx-auto px-4 py-8 relative z-10 min-h-screen">
//                 <motion.div
//                     initial={{ opacity: 0, y: 20 }}
//                     animate={{ opacity: 1, y: 0 }}
//                     transition={{ duration: 0.8 }}
//                     className="text-center mb-8"
//                 >
//                     <h1 className="text-4xl md:text-5xl font-bold mb-2">
//                         –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <span className="text-[34px] md:text-[40px] text-[#c9f5f3]">Paradise Lounge!</span>
//                     </h1>
//                     <p className="text-xl text-gray-300 max-w-2xl mx-auto">
//                         –ü–æ–≥—Ä—É–∑–∏—Å—å –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —É—é—Ç–∞ –∏ –Ω–∞—Å–ª–∞–¥–∏—Å—å –Ω–∞—à–∏–º–∏ –≤–∫—É—Å–Ω—ã–º–∏ –º–∏–∫—Å–∞–º–∏
//                     </p>
//                 </motion.div>

//                 <Carousel3D items={categories} />
//             </div>
//         </div>
//     );
// }
// import { ArrowLeft } from "lucide-react";
// import { useNavigate } from "react-router-dom";
// import { TypingText } from "../components/lightswind/typingText";
// import { useState } from "react";
// import { motion, AnimatePresence } from "framer-motion";
// import fon_hook from '../assets/fon_hook.png';
// import video from '../assets/IMG_5953.mp4';

// export default function Cocktails() {
//     const navigate = useNavigate();
//     const [showFact, setShowFact] = useState(false);
//     const [showVideo, setShowVideo] = useState(false);

//     const cocktails = [
//         {
//             name: "Darkside –∏ Blackburn",
//             description: "–õ–∏—Å—Ç—å—è Darkside –∏ Blackburn –∏–º–µ—é—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –≤–∫—É—Å. –û–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è —Å–∏–ª—å–Ω–æ–π –¥—ã–º–Ω–æ—Å—Ç—å—é –∏ –±–æ–≥–∞—Ç—ã–º –∞—Ä–æ–º–∞—Ç–æ–º.",
//         },
//         {
//             name: "Sebero –∏ MustHave",
//             description: "–û–±–ª–∞–¥–∞–µ—Ç –º—è–≥–∫–æ–π –¥—ã–º–Ω–æ—Å—Ç—å—é. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏—â–µ—Ç –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å—é –∏ –º—è–≥–∫–æ—Å—Ç—å—é.",
//         },
//         {
//             name: "Trofimoff",
//             description: "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–∞–±–∞–∫ Trofimoff –∏–º–µ–µ—Ç –¥—Ä–µ–≤–µ—Å–Ω—ã–µ –Ω–æ—Ç—ã, –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –≤–∫—É—Å. –¢–æ—Ç –∫—Ç–æ –ª—é–±–∏—Ç –ø–æ–∫—Ä–µ–ø—á–µ.",
//         },
//     ];

//     return (
//         <div className="relative p-4 md:p-6 overflow-hidden min-h-screen">
//             <div className="absolute left-0 top-0 h-full w-auto" style={{ width: '50%', height: '100vh', overflow: 'hidden' }}>
//                 <img
//                     src={fon_hook}
//                     alt=""
//                     className="h-full w-full object-cover opacity-70 rounded-2xl"
//                     style={{ filter: 'blur(4px)', transform: 'translateX(-40%)' }}
//                 />
//                 <div className="absolute inset-0 bg-gradient-to-r from-transparent to-[#00211a1b] opacity-5" />
//             </div>
//             <div className="flex w-full max-w-[1200px] mx-auto justify-center z-20 mt-2 relative">
//                 <h1 className="text-[32px] font-bold mb-4 text-white">–ü–∞—Ä–æ–≤—ã–µ –ö–æ–∫—Ç–µ–π–ª–∏</h1>
//             </div>
//             <TypingText
//                 className="mb-6 text-lg text-[#f3f1d7] text-center z-20 relative"
//                 delay={0.5}
//                 duration={1.5}
//                 fontSize="text-[25px]"
//                 fontWeight="font-bold"
//                 color="text-[#f3f1d7]"
//                 letterSpacing="tracking-wide"
//                 align="center"
//             >
//                 –ü–æ–≥—Ä—É–∑–∏—Å—å –≤ –º–∏—Ä –∞—Ä–æ–º–∞—Ç–Ω—ã—Ö –ø–∞—Ä–æ–≤—ã—Ö –∫–æ–∫—Ç–µ–π–ª–µ–π, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª—É—á—à–∏—Ö —Ç–∞–±–∞–∫–æ–≤:  Darkside, Blackburn, Sebero, Duft, MustHave, Trofimoff. <br /> –¶–µ–Ω–∞ –∑–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç ‚Äî 1000 ‚ÇΩ.
//             </TypingText>

//             <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 z-20 relative bg-hookah-purple rounded-lg p-4">
//                 {cocktails.map((cocktail, index) => (
//                     <div key={index}
//                         className="bg-hookah-purple rounded-lg p-4 hover:scale-105 transition-transform duration-300 z-20 relative"
//                         style={{
//                             boxShadow: '0 25px 50px -12px rgba(33, 33, 33, 1)',
//                         }}>
//                         <h3 className="text-[22px] font-semibold text-white mb-2"
//                             style={{ fontFamily: 'Roboto', fontWeight: 'bold' }}>{cocktail.name}</h3>
//                         <p className="text-white text-[18px]">{cocktail.description}</p>
//                     </div>
//                 ))}
//             </div>
//             <div className="mt-4 flex items-center z-20 relative">
//                 <div className="flex items-center cursor-pointer" onClick={() => setShowFact(!showFact)}>
//                     <div className="w-10 h-10 rounded-full flex items-center justify-center font-bold text-xl neumorphism-fact">
//                         üí°
//                     </div>
//                 </div>

//                 <button
//                     onClick={() => setShowVideo(!showVideo)}
//                     className="ml-auto flex items-center cursor-pointer"
//                 >
//                     {showVideo ? (
//                         <>
//                             <span className="mr-2 text-2xl"></span>
//                         </>
//                     ) : (
//                         <>
//                             <span className="mr-2 text-[32px]">‚ú®</span>
//                         </>
//                     )}
//                 </button>
//             </div>

//             <AnimatePresence>
//                 {showFact && (
//                     <div className="fixed inset-0 flex items-center justify-center z-30 bg-[#000000ec] bg-opacity-50 p-4">
//                         <motion.div
//                             className="bg-[#607c80] rounded-lg p-6 shadow-lg max-w-md w-full"
//                             initial={{ opacity: 0, scale: 0.8 }}
//                             animate={{ opacity: 1, scale: 1 }}
//                             exit={{ opacity: 0, scale: 0.8, x: '-100%' }}
//                             transition={{ duration: 0.9 }}
//                         >
//                             <h4 className="text-xl font-semibold mb-2 text-[#e2f8f5]"
//                                 style={{ fontFamily: 'Roboto', fontWeight: 'bold' }}>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç</h4>
//                             <p className="text-[#181e1d] text-[18px]"
//                                 style={{ textShadow: '2px 2px 4px rgba(0, 0, 0, 0.1)' }}>
//                                 –ê –∑–Ω–∞–µ—à—å? –ü–∞—Ä–æ–≤—ã–µ –∫–æ–∫—Ç–µ–π–ª–∏ ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Å–æ—á–µ—Ç–∞—é—â–µ–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ç–∞–±–∞—á–Ω—ã–µ —Å–º–µ—Å–∏ —Å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –ø–æ–¥–∞—á–∏. –û–Ω–∏ —Å–æ–∑–¥–∞—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —Ä–µ–ª–∞–∫—Å–∞ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è, –∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö —Ç–∞–±–∞–∫–æ–≤ –¥–µ–ª–∞–µ—Ç –∫–∞–∂–¥—É—é –∑–∞—Ç—è–∂–∫—É –æ—Å–æ–±–µ–Ω–Ω–æ–π!
//                             </p>
//                             <button
//                                 onClick={() => setShowFact(false)}
//                                 className="mt-4 neumorphism-button">
//                                 –°–≤–µ—Ä–Ω—É—Ç—å
//                             </button>
//                         </motion.div>
//                     </div>
//                 )}
//             </AnimatePresence>

//             <AnimatePresence>
//                 {showVideo && (
//                     <motion.div
//                         className="absolute top-0 left-0 w-full h-full z-0"
//                         initial={{ opacity: 0 }}
//                         animate={{ opacity: 1 }}
//                         exit={{ opacity: 0 }}
//                         transition={{ duration: 1, ease: "easeInOut" }}
//                     >
//                         <video
//                             src={video}
//                             playsInline
//                             autoPlay
//                             muted
//                             onEnded={() => setShowVideo(false)}
//                             className="w-full h-full object-cover"
//                         />
//                     </motion.div>
//                 )}
//             </AnimatePresence>

//             <div className="mt-16">
//                 <button
//                     onClick={() => navigate("/")}
//                     className="absolute bottom-6 left-4 text-[#a4a0ab] cursor-pointer flex items-center hover:underline group z-20"
//                 >
//                     <ArrowLeft className="w-5 h-5 relative z-10 transition-transform group-hover:translate-x-1" />
//                     <span className="relative z-10 text-[24px] ml-2"
//                         style={{ fontFamily: 'Sofia', fontWeight: 'bold' }}>–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ</span>
//                     <span className="absolute left-0 bottom-0 w-0 h-0.5 bg-gray-500 transition-all duration-300 group-hover:w-full"></span>
//                 </button>
//             </div>
//         </div >
//     );
// }
// import React from "react";
// import { ScrollTimeline } from "../components/lightswind/scrollTimeline";
// import { DEFAULT_EVENTS } from "../components/lightswind/teaEvents";
// import { useNavigate } from "react-router-dom";
// import { ArrowLeft } from "lucide-react";

// const Tea: React.FC = () => {
//   const navigate = useNavigate();
//   return (
//     <div className="relative h-auto">
//       <div className="scrollable">
//         <ScrollTimeline
//           events={DEFAULT_EVENTS}
//           title="–ß–∞–π–Ω—ã–π –ú–∏–∫—Å"
//           subtitle="–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ª—é–±–∏–º—ã–π —á–∞–π"
//           animationOrder="sequential"
//           cardAlignment="left"
//         />
//       </div>
//       <button
//         onClick={() => navigate("/")}
//         className="absolute bottom-6 left-4 text-[#a4a0ab] cursor-pointer flex items-center hover:underline  group"
//       >
//         <ArrowLeft className=" w-5 h-5 relative z-10 transition-transform group-hover:translate-x-1" />
//         <span className="relative z-10 text-[24px] ml-2"
//           style={{ fontFamily: 'Sofia', fontWeight: 'bold' }}>–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ</span>

//         <span className="absolute left-0 bottom-0 w-0 h-0.5 bg-gray-500 transition-all duration-300 group-hover:w-full"></span>
//       </button>
//     </div>
//   );
// };

// export default Tea;
// // src/pages/Lemonades.tsx
// import { useNavigate } from "react-router-dom";
// import { CountGroup } from "../components/lightswind/countGroup";
// import { ArrowLeft } from "lucide-react";

// export default function Lemonades() {
//     const navigate = useNavigate();

//     const lemonades = [
//         {
//             name: "–ú–æ—Ö–∏—Ç–æ",
//             description: "–û—Å–≤–µ–∂–∞—é—â–∏–π –ª–∏–º–æ–Ω–∞–¥ —Å –ª–∞–π–º–æ–º –∏ –ª–µ–≥–∫–æ–π —Å–ª–∞–¥–æ—Å—Ç—å—é",
//             price: 350,
//         },
//         {
//             name: "–õ–∏–º–æ–Ω–∞–¥ –ö–ª—É–±–Ω–∏–∫–∞",
//             description: "–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π, —Ç–æ–Ω–∏–∑–∏—Ä—É—é—â–∏–π –ª–∏–º–æ–Ω–∞–¥ –∏–∑ –∫–ª—É–±–Ω–∏–∫–∏.",
//             price: 400,
//         },
//         {
//             name: "–õ–∏–º–æ–Ω–∞–¥ –Ø–≥–æ–¥–Ω—ã–π",
//             description: "–ì—É—Å—Ç–æ–π –Ω–∞–ø–∏—Ç–æ–∫ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ª–µ—Å–Ω—ã—Ö —è–≥–æ–¥ –∏ –ª–∏–º–æ–Ω–∞.",
//             price: 400,
//         },
//         {
//             name: "–õ–∏–º–æ–Ω–∞–¥ –ú–∞–Ω–≥–æ-–ú–∞—Ä–∞–∫—É—è",
//             description: "–≠–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–π –ª–∏–º–æ–Ω–∞–¥ —Å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º –≤–∫—É—Å–æ–º –º–∞–Ω–≥–æ –∏ –º–∞—Ä–∞–∫—É–∏, –æ—Å–≤–µ–∂–∞—é—â–∏–π –∏ –∞—Ä–æ–º–∞—Ç–Ω—ã–π.",
//             price: 400,
//         },
//     ];

//     return (
//         <div className="p-8 w-full max-w-[1200px] mx-auto">
//             <h2 className="text-[36px] text-center font-bold mb-4 text-[#f3f1d7]">–õ–∏–º–æ–Ω–∞–¥—ã</h2>
//             <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
//                 {lemonades.map((lemonade, index) => (
//                     <div key={index} className="rounded-lg p-4 "
//                         style={{
//                             boxShadow: '0 25px 50px -12px rgba(33, 33, 33, 1)',
//                         }}>
//                         <h2 className="text-[22px] font-medium text-[#d7d3a1]"
//                             style={{ fontFamily: "font-serif" }}>{lemonade.name}</h2>
//                         <div className="text-[#c4c4c4] font-extralight pt-2">{lemonade.description}</div>
//                         <div className="flex items-center gap-6 pt-2">
//                             <div className="text-sm text-[#ebeae1]"> 950 –º–ª.</div>
//                             <CountGroup
//                                 value={lemonade.price}
//                                 duration={2}
//                                 prefix=""
//                                 suffix=" ‚ÇΩ"
//                                 decimals={0}
//                                 textColor="text-[#d7d3a1]"
//                                 fontFamily="font-serif"
//                                 animationStyle="bounce"
//                                 easing="easeInOut"
//                                 className="text-[20px] font-bold"
//                             />
//                         </div>

//                     </div>
//                 ))}
//             </div>
//             <button
//                 onClick={() => navigate("/")}
//                 className="text-[#a4a0ab] cursor-pointer flex items-center hover:underline relative group mt-4"
//             >
//                 <ArrowLeft className="w-5 h-5 relative z-10 transition-transform group-hover:translate-x-1" />
//                 <span className="relative z-10 text-[24px] ml-2"
//                     style={{ fontFamily: 'Sofia', fontWeight: 'bold' }}>–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ</span>

//                 <span className="absolute left-0 bottom-0 w-0 h-0.5 bg-gray-500 transition-all duration-300 group-hover:w-full"></span>
//             </button>
//         </div>
//     );
// }
// import { AnimatePresence, motion } from "framer-motion";
// import { ArrowLeft } from "lucide-react";
// import { useState } from "react";
// import { useNavigate } from "react-router-dom";

// export default function Rules() {
//     const navigate = useNavigate();
//     const [openFine, setOpenFine] = useState(false);


//     const rules = [
//         "üö≠ –ù–µ –∫—É—Ä–∏–º —Å–∏–≥–∞—Ä–µ—Ç—ã –≤–Ω—É—Ç—Ä–∏ ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è, —É –Ω–∞—Å –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è —ç—Ç–æ–≥–æ.",
//         "ü§ù –£–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö –≥–æ—Å—Ç–µ–π –∏ –∫–∞–ª—å—è–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ ‚Äî –æ–Ω–∏ —Ç–æ–∂–µ –ø—Ä–∏—à–ª–∏ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è, –∞ –Ω–µ —Å–ø–æ—Ä–∏—Ç—å –æ —Ç–æ–º, –∫—Ç–æ –ª—É—á—à–µ –∫—É—Ä–∏—Ç.",
//         "üë• –ö–æ–º–ø–∞–Ω–∏—è –æ—Ç 4 —á–µ–ª–æ–≤–µ–∫? –¢–æ–≥–¥–∞ 2 –∫–∞–ª—å—è–Ω–∞ ‚Äî —ç—Ç–æ –º–∏–Ω–∏–º—É–º! –ß–µ–º –±–æ–ª—å—à–µ, —Ç–µ–º –≤–∫—É—Å–Ω–µ–µ.",
//         "üí∏ –ü—Ä–æ–±–∫–æ–≤—ã–π —Å–±–æ—Ä ‚Äî –≤—Å–µ–≥–æ 200 —Ä—É–±–ª–µ–π –∑–∞ –µ–¥–∏–Ω–∏—Ü—É. –ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, —ç—Ç–æ –Ω–µ –Ω–∞–ª–æ–≥, –∞ –≤–∫–ª–∞–¥ –≤ —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.",
//         "üé∂ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π –∏ —Ä–∞—Å—Å–ª–∞–±–ª—è–π—Ç–µ—Å—å! –ù–æ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏ –≥–∞–¥–∂–µ—Ç—ã –≤ —Ä–µ–∂–∏–º–µ '–Ω–µ –º–µ—à–∞—Ç—å' ‚Äî –º—ã —Ç—É—Ç –Ω–µ –¥–ª—è —Å–µ–ª—Ñ–∏.",
//         "üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã ‚Äî –∫–∞–∫ —Ö–æ—Ä–æ—à–∞—è —à—É—Ç–∫–∞: –º–∞–∫—Å–∏–º—É–º –¥–æ 1:00 –Ω–æ—á–∏. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º—ã –∑–∞–∫—Ä—ã–≤–∞–µ–º –ª–∞–≤–æ—á–∫—É. –ù–µ –æ–ø–∞–∑–¥—ã–≤–∞–π—Ç–µ ‚Äî –∏–Ω–∞—á–µ –ø—Ä–∏–¥–µ—Ç—Å—è –∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è!",
//         "üòÑ –ò —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ: —É–ª—ã–±–∞–π—Ç–µ—Å—å! –•–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –∫–∞–∫ —Ö–æ—Ä–æ—à–∏–π –∫–∞–ª—å—è–Ω: —á–µ–º –±–æ–ª—å—à–µ, —Ç–µ–º –ª—É—á—à–µ.",
//     ];

//     const renderItem = (item: string) => (
//         <div className="p-4 bg-black border border-[#2c2c2c] rounded-lg shadow-md">
//             <p className="text-lg">{item}</p>
//         </div>
//     );

//     return (
//         <div className="p-8 text-white rounded-lg shadow-lg max-w-2xl mx-auto">
//             <h1 className="text-4xl font-bold mb-6 text-center">–ù–∞—à–∏ –ü—Ä–∞–≤–∏–ª–∞ (–∏–ª–∏ –∫–∞–∫ –Ω–µ –∏—Å–ø–æ—Ä—Ç–∏—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É)</h1>
//             <div className="flex flex-col gap-4"
//             >
//                 {rules.map((rule, index) => (
//                     <div key={index}>
//                         {renderItem(rule)}
//                     </div>
//                 ))}
//             </div>
//             <div className="flex justify-between">
//                 <button
//                     onClick={() => navigate("/")}
//                     className="mt-6 left-4 text-[#a4a0ab] cursor-pointer flex items-center hover:underline group"
//                 >
//                     <ArrowLeft className="w-5 h-5 relative z-10 transition-transform group-hover:translate-x-1" />
//                     <span className="relative z-10 text-[24px] ml-2"
//                         style={{ fontFamily: 'Sofia', fontWeight: 'bold' }}>–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ</span>

//                     <span className="absolute left-0 bottom-0 w-0 h-0.5 bg-gray-500 transition-all duration-300 group-hover:w-full"></span>
//                 </button>
//                 <div onClick={() => setOpenFine(!openFine)}>
//                     <button className="mt-6 right-4 text-[#a4a0ab] border border-[#2c2c2c] rounded-lg px-2 py-1 cursor-pointer flex items-center hover:underline">–®—Ç—Ä–∞—Ñ—ã</button>
//                 </div>
//                 <AnimatePresence>
//                     {openFine && (
//                         <div className="fixed inset-0 flex items-center justify-center bg-black/90  p-6">
//                             <motion.div
//                                 className="bg-[#0b0b0b] rounded-lg p-6 shadow-xl max-w-md w-full border-1 border-amber-50"
//                                 initial={{ opacity: 0, scale: 0.8 }}
//                                 animate={{ opacity: 1, scale: 1 }}
//                                 exit={{ opacity: 0, scale: 0.8, x: '-100%' }}
//                                 transition={{ duration: 0.9 }}
//                             >

//                                 <ul className="text-[#f0eeee] list-disc pl-6 space-y-2 text-[20px]">
//                                     <li>–ó–∞ —Ä–∞–∑–±–∏—Ç—É—é –∫–æ–ª–±—É - 1500 ‚ÇΩ.</li>
//                                     <li>–ó–∞ —Ä–∞–∑–±–∏—Ç—É—é —á–∞—à—É - 700 ‚ÇΩ.</li>
//                                     <li>–ü—Ä–æ–∂–µ–≥ –¥–∏–≤–∞–Ω? - –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–µ–º–æ–Ω—Ç–∞.</li>
//                                 </ul>
//                                 <div className="flex float-right">
//                                     <button
//                                         onClick={() => setOpenFine(false)}
//                                         className=" neumorphism-button">
//                                         –°–≤–µ—Ä–Ω—É—Ç—å
//                                     </button>
//                                 </div>
//                             </motion.div>
//                         </div>
//                     )}
//                 </AnimatePresence>
//             </div>
//         </div>
//     );
// }
// –≤–æ—Ç –Ω–µ–º–Ω–æ–≥–æ –≤–∞–º –º–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è —á—Ç–æ —è —Ö–æ—á—É —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å  –û–±—â–∏–µ —Ü–µ–ª–∏ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
// –û–±–µ—Å–ø–µ—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –ø–æ email.
// –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–∏—Å—å–º–æ –æ—Ç –∏–º–µ–Ω–∏ "BlackBox AI" —Å –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–º –∫–æ–¥–æ–º.
// –•—Ä–∞–Ω–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞–¥–µ–∂–Ω–æ –∏ –∑–∞—â–∏—â–µ–Ω–Ω–æ.
// –û–±–µ—Å–ø–µ—á–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞ –±–µ–∑ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏, –¥–∞–∂–µ –ø—Ä–∏ –∑–∞–¥–µ—Ä–∂–∫–∞—Ö –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–∏—Å–µ–º.
// –ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–±–æ–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å—é –∏–ª–∏ –Ω–∞–≥—Ä—É–∑–∫–æ–π.
// –í–Ω–µ–¥—Ä–∏—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º—ã –∑–∞—â–∏—Ç—ã –æ—Ç –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ–ø—ã—Ç–æ–∫ –≤–≤–æ–¥–∞ –∫–æ–¥–∞). Firebase Authentication	–•—Ä–∞–Ω–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π (email + –ø–∞—Ä–æ–ª—å)
// Firestore	–•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã—Ö –∫–æ–¥–∞—Ö, –ø–æ–ø—ã—Ç–∫–∞—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
// Firebase Cloud Functions	–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞, –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
// Email-—Å–µ—Ä–≤–∏—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, SendGrid)	–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º —Å –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–º –∫–æ–¥–æ–º
// –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (React TS)	–§–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Firestore. –ü—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
// –®–∞–≥–∏:
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É:

// Email
// –ü–∞—Ä–æ–ª—å
// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
// –ù–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:

// –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å email
// –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π
// –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è API Firebase Authentication –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞: –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è Cloud Function sendVerificationCode, –∫–æ—Ç–æ—Ä–∞—è:
// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥.
// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ Firestore –≤–º–µ—Å—Ç–µ —Å –º–µ—Ç–∫–∞–º–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å—á–µ—Ç—á–∏–∫–æ–º –ø–æ–ø—ã—Ç–æ–∫.
// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ –Ω–∞ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —ç—Ç–∏–º –∫–æ–¥–æ–º. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–≤–µ—Ä–æ—á–Ω–æ–≥–æ –∫–æ–¥–∞ (Cloud Function)
// –°–æ–∑–¥–∞–π—Ç–µ Cloud Function sendVerificationCode, –∫–æ—Ç–æ—Ä–∞—è:

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥.
// –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–≥–æ –≤ Firestore –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (verificationCode, codeGeneratedAt, codeAttempts=0).
// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ SendGrid –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–∏—Å.
// –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ Cloud Function:  –í–≤–æ–¥ –∫–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –µ–≥–æ –ø—Ä–æ–≤–µ—Ä–∫–∞
// –®–∞–≥–∏:
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ.
// –§—Ä–æ–Ω—Ç–µ–Ω–¥ –≤—ã–∑—ã–≤–∞–µ—Ç API –∏–ª–∏ Cloud Function verifyUserCode –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏. –í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:
// –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–µ–Ω—è–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å –Ω–∞ 'active'.
// –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ –ø–æ–ø—ã—Ç–æ–∫ ‚Äî –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
// –ü—Ä–∞–≤–∏–ª–∞ Firestore: –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞:
// –í–Ω–µ–¥—Ä–∏—Ç–µ –∫–∞–ø—á—É –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞.
// –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª–∞ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.
// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ–ø—ã—Ç–æ–∫:
// –•—Ä–∞–Ω–∏—Ç–µ —Å—á–µ—Ç—á–∏–∫ codeAttempts.
// –ü–æ—Å–ª–µ –ª–∏–º–∏—Ç–∞ ‚Äî –±–ª–æ–∫–∏—Ä—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –∏–ª–∏ —Ç—Ä–µ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:
// –ù–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ –ø–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö.
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∫–æ–¥–æ–≤:
// –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é (cron), –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –∏–ª–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–¥—ã —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—É—Ç–∫–∏). —Ä–∞—Å–ø–∏—à–∏—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ —Ç–¥ , —Å –ø–æ–ª–Ω–æ–≥–æ –Ω—É–ª—è –¥–æ —Å—Ç–∞—Ä—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–æ–π –ø—Ä–æ–µ–∫—Ç, –º–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ 